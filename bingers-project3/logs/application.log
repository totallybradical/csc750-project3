2018-10-27 20:44:40,532 [INFO] from play.api.http.EnabledFilters in play-dev-mode-akka.actor.default-dispatcher-4 - Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):

    play.filters.csrf.CSRFFilter
    play.filters.headers.SecurityHeadersFilter

2018-10-27 20:44:40,578 [INFO] from play.api.Play in play-dev-mode-akka.actor.default-dispatcher-4 - Application started (Dev)
2018-10-27 20:45:18,746 [INFO] from play.api.http.EnabledFilters in play-dev-mode-akka.actor.default-dispatcher-4 - Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):

    play.filters.csrf.CSRFFilter
    play.filters.headers.SecurityHeadersFilter

2018-10-27 20:45:18,754 [INFO] from play.api.Play in play-dev-mode-akka.actor.default-dispatcher-4 - Application started (Dev)
2018-10-27 20:52:42,157 [INFO] from play.api.http.EnabledFilters in play-dev-mode-akka.actor.default-dispatcher-13 - Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):

    play.filters.csrf.CSRFFilter
    play.filters.headers.SecurityHeadersFilter

2018-10-27 20:52:42,162 [INFO] from play.api.Play in play-dev-mode-akka.actor.default-dispatcher-13 - Application started (Dev)
2018-10-27 20:53:17,148 [ERROR] from application in application-akka.actor.default-dispatcher-2 - 

! @79ladf63b - Internal server error, for (GET) [/iscommercial/transaction2] ->
 
play.api.http.HttpErrorHandlerExceptions$$anon$1: Execution exception[[NullPointerException: null]]
	at play.api.http.HttpErrorHandlerExceptions$.throwableToUsefulException(HttpErrorHandler.scala:251)
	at play.api.http.DefaultHttpErrorHandler.onServerError(HttpErrorHandler.scala:178)
	at play.core.server.AkkaHttpServer$$anonfun$1.applyOrElse(AkkaHttpServer.scala:363)
	at play.core.server.AkkaHttpServer$$anonfun$1.applyOrElse(AkkaHttpServer.scala:361)
	at scala.concurrent.Future.$anonfun$recoverWith$1(Future.scala:413)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:37)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch.$anonfun$run$1(BatchingExecutor.scala:91)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:81)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:91)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:40)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:44)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: java.lang.NullPointerException: null
	at controllers.HomeController.isCommercial(HomeController.java:184)
	at router.Routes$$anonfun$routes$1.$anonfun$applyOrElse$10(Routes.scala:269)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:134)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:133)
	at play.core.routing.HandlerInvokerFactory$JavaActionInvokerFactory$$anon$8$$anon$2$$anon$1.invocation(HandlerInvoker.scala:108)
	at play.core.j.JavaAction$$anon$1.call(JavaAction.scala:88)
	at play.http.DefaultActionCreator$1.call(DefaultActionCreator.java:31)
	at play.core.j.JavaAction.$anonfun$apply$8(JavaAction.scala:138)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:654)
	at scala.util.Success.$anonfun$map$1(Try.scala:251)
	at scala.util.Success.map(Try.scala:209)
	at scala.concurrent.Future.$anonfun$map$1(Future.scala:288)
	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:29)
	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:29)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at play.core.j.HttpExecutionContext$$anon$2.run(HttpExecutionContext.scala:56)
	at play.api.libs.streams.Execution$trampoline$.execute(Execution.scala:70)
	at play.core.j.HttpExecutionContext.execute(HttpExecutionContext.scala:48)
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:68)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete(Promise.scala:368)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete$(Promise.scala:367)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.onComplete(Promise.scala:375)
	at scala.concurrent.impl.Promise.transform(Promise.scala:29)
	at scala.concurrent.impl.Promise.transform$(Promise.scala:27)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.transform(Promise.scala:375)
	at scala.concurrent.Future.map(Future.scala:288)
	at scala.concurrent.Future.map$(Future.scala:288)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.map(Promise.scala:375)
	at scala.concurrent.Future$.apply(Future.scala:654)
	at play.core.j.JavaAction.apply(JavaAction.scala:138)
	at play.api.mvc.Action.$anonfun$apply$2(Action.scala:96)
	at play.api.libs.streams.StrictAccumulator.$anonfun$mapFuture$4(Accumulator.scala:174)
	at scala.util.Try$.apply(Try.scala:209)
	at play.api.libs.streams.StrictAccumulator.$anonfun$mapFuture$3(Accumulator.scala:174)
	at scala.Function1.$anonfun$andThen$1(Function1.scala:52)
	at scala.Function1.$anonfun$andThen$1(Function1.scala:52)
	at scala.Function1.$anonfun$andThen$1(Function1.scala:52)
	at play.api.libs.streams.StrictAccumulator.run(Accumulator.scala:207)
	at play.core.server.AkkaHttpServer.$anonfun$runAction$4(AkkaHttpServer.scala:357)
	at akka.http.scaladsl.util.FastFuture$.strictTransform$1(FastFuture.scala:41)
	at akka.http.scaladsl.util.FastFuture$.$anonfun$transformWith$3(FastFuture.scala:51)
	... 12 common frames omitted
2018-10-27 20:55:06,734 [ERROR] from application in application-akka.actor.default-dispatcher-3 - 

! @79ladlc6b - Internal server error, for (POST) [/addtransaction/consumer1/merchant2/transaction2] ->
 
play.api.http.HttpErrorHandlerExceptions$$anon$1: Execution exception[[NullPointerException: null]]
	at play.api.http.HttpErrorHandlerExceptions$.throwableToUsefulException(HttpErrorHandler.scala:251)
	at play.api.http.DefaultHttpErrorHandler.onServerError(HttpErrorHandler.scala:178)
	at play.core.server.AkkaHttpServer$$anonfun$1.applyOrElse(AkkaHttpServer.scala:363)
	at play.core.server.AkkaHttpServer$$anonfun$1.applyOrElse(AkkaHttpServer.scala:361)
	at scala.concurrent.Future.$anonfun$recoverWith$1(Future.scala:413)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:37)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch.$anonfun$run$1(BatchingExecutor.scala:91)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:81)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:91)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:40)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:44)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: java.lang.NullPointerException: null
	at org.apache.jena.rdf.model.impl.ModelCom.add(ModelCom.java:1202)
	at org.apache.jena.rdf.model.impl.ResourceImpl.addProperty(ResourceImpl.java:299)
	at controllers.HomeController.addTransaction(HomeController.java:164)
	at router.Routes$$anonfun$routes$1.$anonfun$applyOrElse$8(Routes.scala:263)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:134)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:133)
	at play.core.routing.HandlerInvokerFactory$JavaActionInvokerFactory$$anon$8$$anon$2$$anon$1.invocation(HandlerInvoker.scala:108)
	at play.core.j.JavaAction$$anon$1.call(JavaAction.scala:88)
	at play.http.DefaultActionCreator$1.call(DefaultActionCreator.java:31)
	at play.core.j.JavaAction.$anonfun$apply$8(JavaAction.scala:138)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:654)
	at scala.util.Success.$anonfun$map$1(Try.scala:251)
	at scala.util.Success.map(Try.scala:209)
	at scala.concurrent.Future.$anonfun$map$1(Future.scala:288)
	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:29)
	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:29)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at play.core.j.HttpExecutionContext$$anon$2.run(HttpExecutionContext.scala:56)
	at play.api.libs.streams.Execution$trampoline$.execute(Execution.scala:70)
	at play.core.j.HttpExecutionContext.execute(HttpExecutionContext.scala:48)
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:68)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete(Promise.scala:368)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete$(Promise.scala:367)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.onComplete(Promise.scala:375)
	at scala.concurrent.impl.Promise.transform(Promise.scala:29)
	at scala.concurrent.impl.Promise.transform$(Promise.scala:27)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.transform(Promise.scala:375)
	at scala.concurrent.Future.map(Future.scala:288)
	at scala.concurrent.Future.map$(Future.scala:288)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.map(Promise.scala:375)
	at scala.concurrent.Future$.apply(Future.scala:654)
	at play.core.j.JavaAction.apply(JavaAction.scala:138)
	at play.api.mvc.Action.$anonfun$apply$2(Action.scala:96)
	at scala.concurrent.Future.$anonfun$flatMap$1(Future.scala:303)
	... 13 common frames omitted
2018-10-27 21:09:57,766 [INFO] from play.api.http.EnabledFilters in play-dev-mode-akka.actor.default-dispatcher-17 - Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):

    play.filters.csrf.CSRFFilter
    play.filters.headers.SecurityHeadersFilter

2018-10-27 21:09:57,772 [INFO] from play.api.Play in play-dev-mode-akka.actor.default-dispatcher-17 - Application started (Dev)
2018-10-27 21:10:15,398 [ERROR] from application in application-akka.actor.default-dispatcher-2 - 

! @79lafl4b1 - Internal server error, for (POST) [/addtransaction/consumer1/merchant1/transaction1] ->
 
play.api.http.HttpErrorHandlerExceptions$$anon$1: Execution exception[[InconsistentOntologyException: Cannot do reasoning with inconsistent ontologies!
Reason for inconsistency: An individual belongs to a type and its complement]]
	at play.api.http.HttpErrorHandlerExceptions$.throwableToUsefulException(HttpErrorHandler.scala:251)
	at play.api.http.DefaultHttpErrorHandler.onServerError(HttpErrorHandler.scala:178)
	at play.core.server.AkkaHttpServer$$anonfun$1.applyOrElse(AkkaHttpServer.scala:363)
	at play.core.server.AkkaHttpServer$$anonfun$1.applyOrElse(AkkaHttpServer.scala:361)
	at scala.concurrent.Future.$anonfun$recoverWith$1(Future.scala:413)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:37)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch.$anonfun$run$1(BatchingExecutor.scala:91)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:81)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:91)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:40)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:44)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: openllet.core.exceptions.InconsistentOntologyException: Cannot do reasoning with inconsistent ontologies!
Reason for inconsistency: An individual belongs to a type and its complement
	at openllet.core.KnowledgeBaseImpl.ensureConsistency(KnowledgeBaseImpl.java:1900)
	at openllet.core.knowledge.InstancesBase.retrieve(InstancesBase.java:204)
	at openllet.core.knowledge.InstancesBase.getInstances(InstancesBase.java:129)
	at openllet.jena.graph.query.GraphQueryHandler$10.find(GraphQueryHandler.java:378)
	at openllet.jena.graph.query.GraphQueryHandler.findTriple(GraphQueryHandler.java:1561)
	at openllet.jena.PelletInfGraph.findWithContinuation(PelletInfGraph.java:169)
	at org.apache.jena.reasoner.BaseInfGraph.graphBaseFind(BaseInfGraph.java:371)
	at org.apache.jena.graph.impl.GraphBase.find(GraphBase.java:255)
	at org.apache.jena.rdf.model.impl.ModelCom.listStatements(ModelCom.java:498)
	at org.apache.jena.rdf.model.impl.ModelCom.listStatements(ModelCom.java:503)
	at org.apache.jena.ontology.impl.OntClassImpl.listInstances(OntClassImpl.java:674)
	at org.apache.jena.ontology.impl.OntClassImpl.listInstances(OntClassImpl.java:658)
	at controllers.HomeController.printOntology(HomeController.java:73)
	at controllers.HomeController.addTransaction(HomeController.java:149)
	at router.Routes$$anonfun$routes$1.$anonfun$applyOrElse$8(Routes.scala:263)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:134)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:133)
	at play.core.routing.HandlerInvokerFactory$JavaActionInvokerFactory$$anon$8$$anon$2$$anon$1.invocation(HandlerInvoker.scala:108)
	at play.core.j.JavaAction$$anon$1.call(JavaAction.scala:88)
	at play.http.DefaultActionCreator$1.call(DefaultActionCreator.java:31)
	at play.core.j.JavaAction.$anonfun$apply$8(JavaAction.scala:138)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:654)
	at scala.util.Success.$anonfun$map$1(Try.scala:251)
	at scala.util.Success.map(Try.scala:209)
	at scala.concurrent.Future.$anonfun$map$1(Future.scala:288)
	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:29)
	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:29)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at play.core.j.HttpExecutionContext$$anon$2.run(HttpExecutionContext.scala:56)
	at play.api.libs.streams.Execution$trampoline$.execute(Execution.scala:70)
	at play.core.j.HttpExecutionContext.execute(HttpExecutionContext.scala:48)
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:68)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete(Promise.scala:368)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete$(Promise.scala:367)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.onComplete(Promise.scala:375)
	at scala.concurrent.impl.Promise.transform(Promise.scala:29)
	at scala.concurrent.impl.Promise.transform$(Promise.scala:27)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.transform(Promise.scala:375)
	at scala.concurrent.Future.map(Future.scala:288)
	at scala.concurrent.Future.map$(Future.scala:288)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.map(Promise.scala:375)
	at scala.concurrent.Future$.apply(Future.scala:654)
	at play.core.j.JavaAction.apply(JavaAction.scala:138)
	at play.api.mvc.Action.$anonfun$apply$2(Action.scala:96)
	at scala.concurrent.Future.$anonfun$flatMap$1(Future.scala:303)
	... 13 common frames omitted
2018-10-27 21:24:52,077 [INFO] from play.api.http.EnabledFilters in play-dev-mode-akka.actor.default-dispatcher-12 - Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):

    play.filters.csrf.CSRFFilter
    play.filters.headers.SecurityHeadersFilter

2018-10-27 21:24:52,083 [INFO] from play.api.Play in play-dev-mode-akka.actor.default-dispatcher-12 - Application started (Dev)
2018-10-27 21:28:51,754 [ERROR] from application in application-akka.actor.default-dispatcher-3 - 

! @79lai6hll - Internal server error, for (POST) [/reset] ->
 
play.api.http.HttpErrorHandlerExceptions$$anon$1: Execution exception[[InconsistentOntologyException: Cannot do reasoning with inconsistent ontologies!
Reason for inconsistency: An individual belongs to a type and its complement]]
	at play.api.http.HttpErrorHandlerExceptions$.throwableToUsefulException(HttpErrorHandler.scala:251)
	at play.api.http.DefaultHttpErrorHandler.onServerError(HttpErrorHandler.scala:178)
	at play.core.server.AkkaHttpServer$$anonfun$1.applyOrElse(AkkaHttpServer.scala:363)
	at play.core.server.AkkaHttpServer$$anonfun$1.applyOrElse(AkkaHttpServer.scala:361)
	at scala.concurrent.Future.$anonfun$recoverWith$1(Future.scala:413)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:37)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch.$anonfun$run$1(BatchingExecutor.scala:91)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:81)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:91)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:40)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:44)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: openllet.core.exceptions.InconsistentOntologyException: Cannot do reasoning with inconsistent ontologies!
Reason for inconsistency: An individual belongs to a type and its complement
	at openllet.core.KnowledgeBaseImpl.ensureConsistency(KnowledgeBaseImpl.java:1900)
	at openllet.core.knowledge.InstancesBase.retrieve(InstancesBase.java:204)
	at openllet.core.knowledge.InstancesBase.getInstances(InstancesBase.java:129)
	at openllet.jena.graph.query.GraphQueryHandler$10.find(GraphQueryHandler.java:378)
	at openllet.jena.graph.query.GraphQueryHandler.findTriple(GraphQueryHandler.java:1561)
	at openllet.jena.PelletInfGraph.findWithContinuation(PelletInfGraph.java:169)
	at org.apache.jena.reasoner.BaseInfGraph.graphBaseFind(BaseInfGraph.java:371)
	at org.apache.jena.graph.impl.GraphBase.find(GraphBase.java:255)
	at org.apache.jena.rdf.model.impl.ModelCom.listStatements(ModelCom.java:498)
	at org.apache.jena.rdf.model.impl.ModelCom.listStatements(ModelCom.java:503)
	at org.apache.jena.ontology.impl.OntClassImpl.listInstances(OntClassImpl.java:674)
	at org.apache.jena.ontology.impl.OntClassImpl.listInstances(OntClassImpl.java:658)
	at controllers.HomeController.printOntology(HomeController.java:73)
	at controllers.HomeController.reset(HomeController.java:251)
	at router.Routes$$anonfun$routes$1.$anonfun$applyOrElse$20(Routes.scala:299)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:134)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:133)
	at play.core.routing.HandlerInvokerFactory$JavaActionInvokerFactory$$anon$8$$anon$2$$anon$1.invocation(HandlerInvoker.scala:108)
	at play.core.j.JavaAction$$anon$1.call(JavaAction.scala:88)
	at play.http.DefaultActionCreator$1.call(DefaultActionCreator.java:31)
	at play.core.j.JavaAction.$anonfun$apply$8(JavaAction.scala:138)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:654)
	at scala.util.Success.$anonfun$map$1(Try.scala:251)
	at scala.util.Success.map(Try.scala:209)
	at scala.concurrent.Future.$anonfun$map$1(Future.scala:288)
	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:29)
	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:29)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at play.core.j.HttpExecutionContext$$anon$2.run(HttpExecutionContext.scala:56)
	at play.api.libs.streams.Execution$trampoline$.execute(Execution.scala:70)
	at play.core.j.HttpExecutionContext.execute(HttpExecutionContext.scala:48)
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:68)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete(Promise.scala:368)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete$(Promise.scala:367)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.onComplete(Promise.scala:375)
	at scala.concurrent.impl.Promise.transform(Promise.scala:29)
	at scala.concurrent.impl.Promise.transform$(Promise.scala:27)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.transform(Promise.scala:375)
	at scala.concurrent.Future.map(Future.scala:288)
	at scala.concurrent.Future.map$(Future.scala:288)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.map(Promise.scala:375)
	at scala.concurrent.Future$.apply(Future.scala:654)
	at play.core.j.JavaAction.apply(JavaAction.scala:138)
	at play.api.mvc.Action.$anonfun$apply$2(Action.scala:96)
	at scala.concurrent.Future.$anonfun$flatMap$1(Future.scala:303)
	... 13 common frames omitted
2018-10-27 21:35:17,985 [ERROR] from application in application-akka.actor.default-dispatcher-3 - 

! @79laj2h4m - Internal server error, for (POST) [/addtransaction/consumer1/consumer2/transaction2] ->
 
play.api.http.HttpErrorHandlerExceptions$$anon$1: Execution exception[[InconsistentOntologyException: Cannot do reasoning with inconsistent ontologies!
Reason for inconsistency: An individual belongs to a type and its complement]]
	at play.api.http.HttpErrorHandlerExceptions$.throwableToUsefulException(HttpErrorHandler.scala:251)
	at play.api.http.DefaultHttpErrorHandler.onServerError(HttpErrorHandler.scala:178)
	at play.core.server.AkkaHttpServer$$anonfun$1.applyOrElse(AkkaHttpServer.scala:363)
	at play.core.server.AkkaHttpServer$$anonfun$1.applyOrElse(AkkaHttpServer.scala:361)
	at scala.concurrent.Future.$anonfun$recoverWith$1(Future.scala:413)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:37)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch.$anonfun$run$1(BatchingExecutor.scala:91)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:81)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:91)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:40)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:44)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: openllet.core.exceptions.InconsistentOntologyException: Cannot do reasoning with inconsistent ontologies!
Reason for inconsistency: An individual belongs to a type and its complement
	at openllet.core.KnowledgeBaseImpl.ensureConsistency(KnowledgeBaseImpl.java:1900)
	at openllet.core.knowledge.InstancesBase.retrieve(InstancesBase.java:204)
	at openllet.core.knowledge.InstancesBase.getInstances(InstancesBase.java:129)
	at openllet.jena.graph.query.GraphQueryHandler$10.find(GraphQueryHandler.java:378)
	at openllet.jena.graph.query.GraphQueryHandler.findTriple(GraphQueryHandler.java:1561)
	at openllet.jena.PelletInfGraph.findWithContinuation(PelletInfGraph.java:169)
	at org.apache.jena.reasoner.BaseInfGraph.graphBaseFind(BaseInfGraph.java:371)
	at org.apache.jena.graph.impl.GraphBase.find(GraphBase.java:255)
	at org.apache.jena.rdf.model.impl.ModelCom.listStatements(ModelCom.java:498)
	at org.apache.jena.rdf.model.impl.ModelCom.listStatements(ModelCom.java:503)
	at org.apache.jena.ontology.impl.OntClassImpl.listInstances(OntClassImpl.java:674)
	at org.apache.jena.ontology.impl.OntClassImpl.listInstances(OntClassImpl.java:658)
	at controllers.HomeController.printOntology(HomeController.java:73)
	at controllers.HomeController.addTransaction(HomeController.java:149)
	at router.Routes$$anonfun$routes$1.$anonfun$applyOrElse$8(Routes.scala:263)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:134)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:133)
	at play.core.routing.HandlerInvokerFactory$JavaActionInvokerFactory$$anon$8$$anon$2$$anon$1.invocation(HandlerInvoker.scala:108)
	at play.core.j.JavaAction$$anon$1.call(JavaAction.scala:88)
	at play.http.DefaultActionCreator$1.call(DefaultActionCreator.java:31)
	at play.core.j.JavaAction.$anonfun$apply$8(JavaAction.scala:138)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:654)
	at scala.util.Success.$anonfun$map$1(Try.scala:251)
	at scala.util.Success.map(Try.scala:209)
	at scala.concurrent.Future.$anonfun$map$1(Future.scala:288)
	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:29)
	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:29)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at play.core.j.HttpExecutionContext$$anon$2.run(HttpExecutionContext.scala:56)
	at play.api.libs.streams.Execution$trampoline$.execute(Execution.scala:70)
	at play.core.j.HttpExecutionContext.execute(HttpExecutionContext.scala:48)
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:68)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete(Promise.scala:368)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete$(Promise.scala:367)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.onComplete(Promise.scala:375)
	at scala.concurrent.impl.Promise.transform(Promise.scala:29)
	at scala.concurrent.impl.Promise.transform$(Promise.scala:27)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.transform(Promise.scala:375)
	at scala.concurrent.Future.map(Future.scala:288)
	at scala.concurrent.Future.map$(Future.scala:288)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.map(Promise.scala:375)
	at scala.concurrent.Future$.apply(Future.scala:654)
	at play.core.j.JavaAction.apply(JavaAction.scala:138)
	at play.api.mvc.Action.$anonfun$apply$2(Action.scala:96)
	at scala.concurrent.Future.$anonfun$flatMap$1(Future.scala:303)
	... 13 common frames omitted
2018-10-27 21:39:52,193 [ERROR] from application in application-akka.actor.default-dispatcher-3 - 

! @79laji6l8 - Internal server error, for (POST) [/addtransaction/consumer1/merchant1/transaction1] ->
 
play.api.http.HttpErrorHandlerExceptions$$anon$1: Execution exception[[InconsistentOntologyException: Cannot do reasoning with inconsistent ontologies!
Reason for inconsistency: An individual belongs to a type and its complement]]
	at play.api.http.HttpErrorHandlerExceptions$.throwableToUsefulException(HttpErrorHandler.scala:251)
	at play.api.http.DefaultHttpErrorHandler.onServerError(HttpErrorHandler.scala:178)
	at play.core.server.AkkaHttpServer$$anonfun$1.applyOrElse(AkkaHttpServer.scala:363)
	at play.core.server.AkkaHttpServer$$anonfun$1.applyOrElse(AkkaHttpServer.scala:361)
	at scala.concurrent.Future.$anonfun$recoverWith$1(Future.scala:413)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:37)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch.$anonfun$run$1(BatchingExecutor.scala:91)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:81)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:91)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:40)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:44)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: openllet.core.exceptions.InconsistentOntologyException: Cannot do reasoning with inconsistent ontologies!
Reason for inconsistency: An individual belongs to a type and its complement
	at openllet.core.KnowledgeBaseImpl.ensureConsistency(KnowledgeBaseImpl.java:1900)
	at openllet.core.knowledge.InstancesBase.retrieve(InstancesBase.java:204)
	at openllet.core.knowledge.InstancesBase.getInstances(InstancesBase.java:129)
	at openllet.jena.graph.query.GraphQueryHandler$10.find(GraphQueryHandler.java:378)
	at openllet.jena.graph.query.GraphQueryHandler.findTriple(GraphQueryHandler.java:1561)
	at openllet.jena.PelletInfGraph.findWithContinuation(PelletInfGraph.java:169)
	at org.apache.jena.reasoner.BaseInfGraph.graphBaseFind(BaseInfGraph.java:371)
	at org.apache.jena.graph.impl.GraphBase.find(GraphBase.java:255)
	at org.apache.jena.rdf.model.impl.ModelCom.listStatements(ModelCom.java:498)
	at org.apache.jena.rdf.model.impl.ModelCom.listStatements(ModelCom.java:503)
	at org.apache.jena.ontology.impl.OntClassImpl.listInstances(OntClassImpl.java:674)
	at org.apache.jena.ontology.impl.OntClassImpl.listInstances(OntClassImpl.java:658)
	at controllers.HomeController.printOntology(HomeController.java:73)
	at controllers.HomeController.addTransaction(HomeController.java:149)
	at router.Routes$$anonfun$routes$1.$anonfun$applyOrElse$8(Routes.scala:263)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:134)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:133)
	at play.core.routing.HandlerInvokerFactory$JavaActionInvokerFactory$$anon$8$$anon$2$$anon$1.invocation(HandlerInvoker.scala:108)
	at play.core.j.JavaAction$$anon$1.call(JavaAction.scala:88)
	at play.http.DefaultActionCreator$1.call(DefaultActionCreator.java:31)
	at play.core.j.JavaAction.$anonfun$apply$8(JavaAction.scala:138)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:654)
	at scala.util.Success.$anonfun$map$1(Try.scala:251)
	at scala.util.Success.map(Try.scala:209)
	at scala.concurrent.Future.$anonfun$map$1(Future.scala:288)
	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:29)
	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:29)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at play.core.j.HttpExecutionContext$$anon$2.run(HttpExecutionContext.scala:56)
	at play.api.libs.streams.Execution$trampoline$.execute(Execution.scala:70)
	at play.core.j.HttpExecutionContext.execute(HttpExecutionContext.scala:48)
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:68)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete(Promise.scala:368)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete$(Promise.scala:367)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.onComplete(Promise.scala:375)
	at scala.concurrent.impl.Promise.transform(Promise.scala:29)
	at scala.concurrent.impl.Promise.transform$(Promise.scala:27)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.transform(Promise.scala:375)
	at scala.concurrent.Future.map(Future.scala:288)
	at scala.concurrent.Future.map$(Future.scala:288)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.map(Promise.scala:375)
	at scala.concurrent.Future$.apply(Future.scala:654)
	at play.core.j.JavaAction.apply(JavaAction.scala:138)
	at play.api.mvc.Action.$anonfun$apply$2(Action.scala:96)
	at scala.concurrent.Future.$anonfun$flatMap$1(Future.scala:303)
	... 13 common frames omitted
2018-10-27 21:43:10,432 [ERROR] from application in application-akka.actor.default-dispatcher-3 - 

! @79lak3e1m - Internal server error, for (POST) [/addtransaction/consumer1/consumer2/transaction2] ->
 
play.api.http.HttpErrorHandlerExceptions$$anon$1: Execution exception[[InconsistentOntologyException: Cannot do reasoning with inconsistent ontologies!
Reason for inconsistency: An individual belongs to a type and its complement]]
	at play.api.http.HttpErrorHandlerExceptions$.throwableToUsefulException(HttpErrorHandler.scala:251)
	at play.api.http.DefaultHttpErrorHandler.onServerError(HttpErrorHandler.scala:178)
	at play.core.server.AkkaHttpServer$$anonfun$1.applyOrElse(AkkaHttpServer.scala:363)
	at play.core.server.AkkaHttpServer$$anonfun$1.applyOrElse(AkkaHttpServer.scala:361)
	at scala.concurrent.Future.$anonfun$recoverWith$1(Future.scala:413)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:37)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch.$anonfun$run$1(BatchingExecutor.scala:91)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:81)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:91)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:40)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:44)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: openllet.core.exceptions.InconsistentOntologyException: Cannot do reasoning with inconsistent ontologies!
Reason for inconsistency: An individual belongs to a type and its complement
	at openllet.core.KnowledgeBaseImpl.ensureConsistency(KnowledgeBaseImpl.java:1900)
	at openllet.core.knowledge.InstancesBase.retrieve(InstancesBase.java:204)
	at openllet.core.knowledge.InstancesBase.getInstances(InstancesBase.java:129)
	at openllet.jena.graph.query.GraphQueryHandler$10.find(GraphQueryHandler.java:378)
	at openllet.jena.graph.query.GraphQueryHandler.findTriple(GraphQueryHandler.java:1561)
	at openllet.jena.PelletInfGraph.findWithContinuation(PelletInfGraph.java:169)
	at org.apache.jena.reasoner.BaseInfGraph.graphBaseFind(BaseInfGraph.java:371)
	at org.apache.jena.graph.impl.GraphBase.find(GraphBase.java:255)
	at org.apache.jena.rdf.model.impl.ModelCom.listStatements(ModelCom.java:498)
	at org.apache.jena.rdf.model.impl.ModelCom.listStatements(ModelCom.java:503)
	at org.apache.jena.ontology.impl.OntClassImpl.listInstances(OntClassImpl.java:674)
	at org.apache.jena.ontology.impl.OntClassImpl.listInstances(OntClassImpl.java:658)
	at controllers.HomeController.printOntology(HomeController.java:73)
	at controllers.HomeController.addTransaction(HomeController.java:149)
	at router.Routes$$anonfun$routes$1.$anonfun$applyOrElse$8(Routes.scala:263)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:134)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:133)
	at play.core.routing.HandlerInvokerFactory$JavaActionInvokerFactory$$anon$8$$anon$2$$anon$1.invocation(HandlerInvoker.scala:108)
	at play.core.j.JavaAction$$anon$1.call(JavaAction.scala:88)
	at play.http.DefaultActionCreator$1.call(DefaultActionCreator.java:31)
	at play.core.j.JavaAction.$anonfun$apply$8(JavaAction.scala:138)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:654)
	at scala.util.Success.$anonfun$map$1(Try.scala:251)
	at scala.util.Success.map(Try.scala:209)
	at scala.concurrent.Future.$anonfun$map$1(Future.scala:288)
	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:29)
	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:29)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at play.core.j.HttpExecutionContext$$anon$2.run(HttpExecutionContext.scala:56)
	at play.api.libs.streams.Execution$trampoline$.execute(Execution.scala:70)
	at play.core.j.HttpExecutionContext.execute(HttpExecutionContext.scala:48)
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:68)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete(Promise.scala:368)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete$(Promise.scala:367)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.onComplete(Promise.scala:375)
	at scala.concurrent.impl.Promise.transform(Promise.scala:29)
	at scala.concurrent.impl.Promise.transform$(Promise.scala:27)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.transform(Promise.scala:375)
	at scala.concurrent.Future.map(Future.scala:288)
	at scala.concurrent.Future.map$(Future.scala:288)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.map(Promise.scala:375)
	at scala.concurrent.Future$.apply(Future.scala:654)
	at play.core.j.JavaAction.apply(JavaAction.scala:138)
	at play.api.mvc.Action.$anonfun$apply$2(Action.scala:96)
	at scala.concurrent.Future.$anonfun$flatMap$1(Future.scala:303)
	... 13 common frames omitted
2018-10-27 21:48:12,660 [ERROR] from application in application-akka.actor.default-dispatcher-3 - 

! @79lakkj40 - Internal server error, for (POST) [/addtransaction/consumer1/merchant1/transaction1] ->
 
play.api.http.HttpErrorHandlerExceptions$$anon$1: Execution exception[[InconsistentOntologyException: Cannot do reasoning with inconsistent ontologies!
Reason for inconsistency: An individual belongs to a type and its complement]]
	at play.api.http.HttpErrorHandlerExceptions$.throwableToUsefulException(HttpErrorHandler.scala:251)
	at play.api.http.DefaultHttpErrorHandler.onServerError(HttpErrorHandler.scala:178)
	at play.core.server.AkkaHttpServer$$anonfun$1.applyOrElse(AkkaHttpServer.scala:363)
	at play.core.server.AkkaHttpServer$$anonfun$1.applyOrElse(AkkaHttpServer.scala:361)
	at scala.concurrent.Future.$anonfun$recoverWith$1(Future.scala:413)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:37)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch.$anonfun$run$1(BatchingExecutor.scala:91)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:81)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:91)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:40)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:44)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: openllet.core.exceptions.InconsistentOntologyException: Cannot do reasoning with inconsistent ontologies!
Reason for inconsistency: An individual belongs to a type and its complement
	at openllet.core.KnowledgeBaseImpl.ensureConsistency(KnowledgeBaseImpl.java:1900)
	at openllet.core.knowledge.InstancesBase.retrieve(InstancesBase.java:204)
	at openllet.core.knowledge.InstancesBase.getInstances(InstancesBase.java:129)
	at openllet.jena.graph.query.GraphQueryHandler$10.find(GraphQueryHandler.java:378)
	at openllet.jena.graph.query.GraphQueryHandler.findTriple(GraphQueryHandler.java:1561)
	at openllet.jena.PelletInfGraph.findWithContinuation(PelletInfGraph.java:169)
	at org.apache.jena.reasoner.BaseInfGraph.graphBaseFind(BaseInfGraph.java:371)
	at org.apache.jena.graph.impl.GraphBase.find(GraphBase.java:255)
	at org.apache.jena.rdf.model.impl.ModelCom.listStatements(ModelCom.java:498)
	at org.apache.jena.rdf.model.impl.ModelCom.listStatements(ModelCom.java:503)
	at org.apache.jena.ontology.impl.OntClassImpl.listInstances(OntClassImpl.java:674)
	at org.apache.jena.ontology.impl.OntClassImpl.listInstances(OntClassImpl.java:658)
	at controllers.HomeController.printOntology(HomeController.java:73)
	at controllers.HomeController.addTransaction(HomeController.java:149)
	at router.Routes$$anonfun$routes$1.$anonfun$applyOrElse$8(Routes.scala:263)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:134)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:133)
	at play.core.routing.HandlerInvokerFactory$JavaActionInvokerFactory$$anon$8$$anon$2$$anon$1.invocation(HandlerInvoker.scala:108)
	at play.core.j.JavaAction$$anon$1.call(JavaAction.scala:88)
	at play.http.DefaultActionCreator$1.call(DefaultActionCreator.java:31)
	at play.core.j.JavaAction.$anonfun$apply$8(JavaAction.scala:138)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:654)
	at scala.util.Success.$anonfun$map$1(Try.scala:251)
	at scala.util.Success.map(Try.scala:209)
	at scala.concurrent.Future.$anonfun$map$1(Future.scala:288)
	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:29)
	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:29)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at play.core.j.HttpExecutionContext$$anon$2.run(HttpExecutionContext.scala:56)
	at play.api.libs.streams.Execution$trampoline$.execute(Execution.scala:70)
	at play.core.j.HttpExecutionContext.execute(HttpExecutionContext.scala:48)
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:68)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete(Promise.scala:368)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete$(Promise.scala:367)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.onComplete(Promise.scala:375)
	at scala.concurrent.impl.Promise.transform(Promise.scala:29)
	at scala.concurrent.impl.Promise.transform$(Promise.scala:27)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.transform(Promise.scala:375)
	at scala.concurrent.Future.map(Future.scala:288)
	at scala.concurrent.Future.map$(Future.scala:288)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.map(Promise.scala:375)
	at scala.concurrent.Future$.apply(Future.scala:654)
	at play.core.j.JavaAction.apply(JavaAction.scala:138)
	at play.api.mvc.Action.$anonfun$apply$2(Action.scala:96)
	at scala.concurrent.Future.$anonfun$flatMap$1(Future.scala:303)
	... 13 common frames omitted
2018-10-27 21:51:31,655 [ERROR] from application in application-akka.actor.default-dispatcher-3 - 

! @79lal61di - Internal server error, for (POST) [/addtransaction/consumer1/consumer2/transaction2] ->
 
play.api.http.HttpErrorHandlerExceptions$$anon$1: Execution exception[[InconsistentOntologyException: Cannot do reasoning with inconsistent ontologies!
Reason for inconsistency: An individual belongs to a type and its complement]]
	at play.api.http.HttpErrorHandlerExceptions$.throwableToUsefulException(HttpErrorHandler.scala:251)
	at play.api.http.DefaultHttpErrorHandler.onServerError(HttpErrorHandler.scala:178)
	at play.core.server.AkkaHttpServer$$anonfun$1.applyOrElse(AkkaHttpServer.scala:363)
	at play.core.server.AkkaHttpServer$$anonfun$1.applyOrElse(AkkaHttpServer.scala:361)
	at scala.concurrent.Future.$anonfun$recoverWith$1(Future.scala:413)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:37)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch.$anonfun$run$1(BatchingExecutor.scala:91)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:81)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:91)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:40)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:44)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: openllet.core.exceptions.InconsistentOntologyException: Cannot do reasoning with inconsistent ontologies!
Reason for inconsistency: An individual belongs to a type and its complement
	at openllet.core.KnowledgeBaseImpl.ensureConsistency(KnowledgeBaseImpl.java:1900)
	at openllet.core.knowledge.InstancesBase.retrieve(InstancesBase.java:204)
	at openllet.core.knowledge.InstancesBase.getInstances(InstancesBase.java:129)
	at openllet.jena.graph.query.GraphQueryHandler$10.find(GraphQueryHandler.java:378)
	at openllet.jena.graph.query.GraphQueryHandler.findTriple(GraphQueryHandler.java:1561)
	at openllet.jena.PelletInfGraph.findWithContinuation(PelletInfGraph.java:169)
	at org.apache.jena.reasoner.BaseInfGraph.graphBaseFind(BaseInfGraph.java:371)
	at org.apache.jena.graph.impl.GraphBase.find(GraphBase.java:255)
	at org.apache.jena.rdf.model.impl.ModelCom.listStatements(ModelCom.java:498)
	at org.apache.jena.rdf.model.impl.ModelCom.listStatements(ModelCom.java:503)
	at org.apache.jena.ontology.impl.OntClassImpl.listInstances(OntClassImpl.java:674)
	at org.apache.jena.ontology.impl.OntClassImpl.listInstances(OntClassImpl.java:658)
	at controllers.HomeController.printOntology(HomeController.java:73)
	at controllers.HomeController.addTransaction(HomeController.java:149)
	at router.Routes$$anonfun$routes$1.$anonfun$applyOrElse$8(Routes.scala:263)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:134)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:133)
	at play.core.routing.HandlerInvokerFactory$JavaActionInvokerFactory$$anon$8$$anon$2$$anon$1.invocation(HandlerInvoker.scala:108)
	at play.core.j.JavaAction$$anon$1.call(JavaAction.scala:88)
	at play.http.DefaultActionCreator$1.call(DefaultActionCreator.java:31)
	at play.core.j.JavaAction.$anonfun$apply$8(JavaAction.scala:138)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:654)
	at scala.util.Success.$anonfun$map$1(Try.scala:251)
	at scala.util.Success.map(Try.scala:209)
	at scala.concurrent.Future.$anonfun$map$1(Future.scala:288)
	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:29)
	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:29)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at play.core.j.HttpExecutionContext$$anon$2.run(HttpExecutionContext.scala:56)
	at play.api.libs.streams.Execution$trampoline$.execute(Execution.scala:70)
	at play.core.j.HttpExecutionContext.execute(HttpExecutionContext.scala:48)
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:68)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete(Promise.scala:368)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete$(Promise.scala:367)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.onComplete(Promise.scala:375)
	at scala.concurrent.impl.Promise.transform(Promise.scala:29)
	at scala.concurrent.impl.Promise.transform$(Promise.scala:27)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.transform(Promise.scala:375)
	at scala.concurrent.Future.map(Future.scala:288)
	at scala.concurrent.Future.map$(Future.scala:288)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.map(Promise.scala:375)
	at scala.concurrent.Future$.apply(Future.scala:654)
	at play.core.j.JavaAction.apply(JavaAction.scala:138)
	at play.api.mvc.Action.$anonfun$apply$2(Action.scala:96)
	at scala.concurrent.Future.$anonfun$flatMap$1(Future.scala:303)
	... 13 common frames omitted
2018-10-27 22:04:19,158 [INFO] from play.api.http.EnabledFilters in play-dev-mode-akka.actor.default-dispatcher-46 - Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):

    play.filters.csrf.CSRFFilter
    play.filters.headers.SecurityHeadersFilter

2018-10-27 22:04:19,163 [INFO] from play.api.Play in play-dev-mode-akka.actor.default-dispatcher-46 - Application started (Dev)
2018-10-27 22:04:35,060 [ERROR] from application in application-akka.actor.default-dispatcher-4 - 

! @79lamogah - Internal server error, for (POST) [/addtransaction/consumer1/consumer2/transaction2] ->
 
play.api.http.HttpErrorHandlerExceptions$$anon$1: Execution exception[[InconsistentOntologyException: Cannot do reasoning with inconsistent ontologies!
Reason for inconsistency: An individual belongs to a type and its complement]]
	at play.api.http.HttpErrorHandlerExceptions$.throwableToUsefulException(HttpErrorHandler.scala:251)
	at play.api.http.DefaultHttpErrorHandler.onServerError(HttpErrorHandler.scala:178)
	at play.core.server.AkkaHttpServer$$anonfun$1.applyOrElse(AkkaHttpServer.scala:363)
	at play.core.server.AkkaHttpServer$$anonfun$1.applyOrElse(AkkaHttpServer.scala:361)
	at scala.concurrent.Future.$anonfun$recoverWith$1(Future.scala:413)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:37)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch.$anonfun$run$1(BatchingExecutor.scala:91)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:81)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:91)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:40)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:44)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: openllet.core.exceptions.InconsistentOntologyException: Cannot do reasoning with inconsistent ontologies!
Reason for inconsistency: An individual belongs to a type and its complement
	at openllet.core.KnowledgeBaseImpl.ensureConsistency(KnowledgeBaseImpl.java:1900)
	at openllet.core.knowledge.InstancesBase.retrieve(InstancesBase.java:204)
	at openllet.core.knowledge.InstancesBase.getInstances(InstancesBase.java:129)
	at openllet.jena.graph.query.GraphQueryHandler$10.find(GraphQueryHandler.java:378)
	at openllet.jena.graph.query.GraphQueryHandler.findTriple(GraphQueryHandler.java:1561)
	at openllet.jena.PelletInfGraph.findWithContinuation(PelletInfGraph.java:169)
	at org.apache.jena.reasoner.BaseInfGraph.graphBaseFind(BaseInfGraph.java:371)
	at org.apache.jena.graph.impl.GraphBase.find(GraphBase.java:255)
	at org.apache.jena.rdf.model.impl.ModelCom.listStatements(ModelCom.java:498)
	at org.apache.jena.rdf.model.impl.ModelCom.listStatements(ModelCom.java:503)
	at org.apache.jena.ontology.impl.OntClassImpl.listInstances(OntClassImpl.java:674)
	at org.apache.jena.ontology.impl.OntClassImpl.listInstances(OntClassImpl.java:658)
	at controllers.HomeController.printOntology(HomeController.java:73)
	at controllers.HomeController.addTransaction(HomeController.java:149)
	at router.Routes$$anonfun$routes$1.$anonfun$applyOrElse$8(Routes.scala:263)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:134)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:133)
	at play.core.routing.HandlerInvokerFactory$JavaActionInvokerFactory$$anon$8$$anon$2$$anon$1.invocation(HandlerInvoker.scala:108)
	at play.core.j.JavaAction$$anon$1.call(JavaAction.scala:88)
	at play.http.DefaultActionCreator$1.call(DefaultActionCreator.java:31)
	at play.core.j.JavaAction.$anonfun$apply$8(JavaAction.scala:138)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:654)
	at scala.util.Success.$anonfun$map$1(Try.scala:251)
	at scala.util.Success.map(Try.scala:209)
	at scala.concurrent.Future.$anonfun$map$1(Future.scala:288)
	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:29)
	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:29)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at play.core.j.HttpExecutionContext$$anon$2.run(HttpExecutionContext.scala:56)
	at play.api.libs.streams.Execution$trampoline$.execute(Execution.scala:70)
	at play.core.j.HttpExecutionContext.execute(HttpExecutionContext.scala:48)
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:68)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete(Promise.scala:368)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete$(Promise.scala:367)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.onComplete(Promise.scala:375)
	at scala.concurrent.impl.Promise.transform(Promise.scala:29)
	at scala.concurrent.impl.Promise.transform$(Promise.scala:27)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.transform(Promise.scala:375)
	at scala.concurrent.Future.map(Future.scala:288)
	at scala.concurrent.Future.map$(Future.scala:288)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.map(Promise.scala:375)
	at scala.concurrent.Future$.apply(Future.scala:654)
	at play.core.j.JavaAction.apply(JavaAction.scala:138)
	at play.api.mvc.Action.$anonfun$apply$2(Action.scala:96)
	at scala.concurrent.Future.$anonfun$flatMap$1(Future.scala:303)
	... 13 common frames omitted
2018-10-27 22:12:17,975 [ERROR] from application in application-akka.actor.default-dispatcher-3 - 

! @79lanop52 - Internal server error, for (POST) [/addtransaction/consumer1/consumer2/transaction2] ->
 
play.api.http.HttpErrorHandlerExceptions$$anon$1: Execution exception[[InconsistentOntologyException: Cannot do reasoning with inconsistent ontologies!
Reason for inconsistency: An individual belongs to a type and its complement]]
	at play.api.http.HttpErrorHandlerExceptions$.throwableToUsefulException(HttpErrorHandler.scala:251)
	at play.api.http.DefaultHttpErrorHandler.onServerError(HttpErrorHandler.scala:178)
	at play.core.server.AkkaHttpServer$$anonfun$1.applyOrElse(AkkaHttpServer.scala:363)
	at play.core.server.AkkaHttpServer$$anonfun$1.applyOrElse(AkkaHttpServer.scala:361)
	at scala.concurrent.Future.$anonfun$recoverWith$1(Future.scala:413)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:37)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch.$anonfun$run$1(BatchingExecutor.scala:91)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:81)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:91)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:40)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:44)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: openllet.core.exceptions.InconsistentOntologyException: Cannot do reasoning with inconsistent ontologies!
Reason for inconsistency: An individual belongs to a type and its complement
	at openllet.core.KnowledgeBaseImpl.ensureConsistency(KnowledgeBaseImpl.java:1900)
	at openllet.core.knowledge.InstancesBase.retrieve(InstancesBase.java:204)
	at openllet.core.knowledge.InstancesBase.getInstances(InstancesBase.java:129)
	at openllet.jena.graph.query.GraphQueryHandler$10.find(GraphQueryHandler.java:378)
	at openllet.jena.graph.query.GraphQueryHandler.findTriple(GraphQueryHandler.java:1561)
	at openllet.jena.PelletInfGraph.findWithContinuation(PelletInfGraph.java:169)
	at org.apache.jena.reasoner.BaseInfGraph.graphBaseFind(BaseInfGraph.java:371)
	at org.apache.jena.graph.impl.GraphBase.find(GraphBase.java:255)
	at org.apache.jena.rdf.model.impl.ModelCom.listStatements(ModelCom.java:498)
	at org.apache.jena.rdf.model.impl.ModelCom.listStatements(ModelCom.java:503)
	at org.apache.jena.ontology.impl.OntClassImpl.listInstances(OntClassImpl.java:674)
	at org.apache.jena.ontology.impl.OntClassImpl.listInstances(OntClassImpl.java:658)
	at controllers.HomeController.printOntology(HomeController.java:73)
	at controllers.HomeController.addTransaction(HomeController.java:149)
	at router.Routes$$anonfun$routes$1.$anonfun$applyOrElse$8(Routes.scala:263)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:134)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:133)
	at play.core.routing.HandlerInvokerFactory$JavaActionInvokerFactory$$anon$8$$anon$2$$anon$1.invocation(HandlerInvoker.scala:108)
	at play.core.j.JavaAction$$anon$1.call(JavaAction.scala:88)
	at play.http.DefaultActionCreator$1.call(DefaultActionCreator.java:31)
	at play.core.j.JavaAction.$anonfun$apply$8(JavaAction.scala:138)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:654)
	at scala.util.Success.$anonfun$map$1(Try.scala:251)
	at scala.util.Success.map(Try.scala:209)
	at scala.concurrent.Future.$anonfun$map$1(Future.scala:288)
	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:29)
	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:29)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at play.core.j.HttpExecutionContext$$anon$2.run(HttpExecutionContext.scala:56)
	at play.api.libs.streams.Execution$trampoline$.execute(Execution.scala:70)
	at play.core.j.HttpExecutionContext.execute(HttpExecutionContext.scala:48)
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:68)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete(Promise.scala:368)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete$(Promise.scala:367)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.onComplete(Promise.scala:375)
	at scala.concurrent.impl.Promise.transform(Promise.scala:29)
	at scala.concurrent.impl.Promise.transform$(Promise.scala:27)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.transform(Promise.scala:375)
	at scala.concurrent.Future.map(Future.scala:288)
	at scala.concurrent.Future.map$(Future.scala:288)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.map(Promise.scala:375)
	at scala.concurrent.Future$.apply(Future.scala:654)
	at play.core.j.JavaAction.apply(JavaAction.scala:138)
	at play.api.mvc.Action.$anonfun$apply$2(Action.scala:96)
	at scala.concurrent.Future.$anonfun$flatMap$1(Future.scala:303)
	... 13 common frames omitted
2018-10-27 22:35:17,756 [INFO] from play.api.http.EnabledFilters in play-dev-mode-akka.actor.default-dispatcher-69 - Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):

    play.filters.csrf.CSRFFilter
    play.filters.headers.SecurityHeadersFilter

2018-10-27 22:35:17,758 [INFO] from play.api.Play in play-dev-mode-akka.actor.default-dispatcher-69 - Application started (Dev)
